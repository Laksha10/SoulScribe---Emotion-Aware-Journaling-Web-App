"""Add user model and user-thread relationship

Revision ID: cd5a2f57bad2
Revises: 96a4006eee20
Create Date: 2025-07-14 15:57:47.992040

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cd5a2f57bad2'
down_revision = '96a4006eee20'
branch_labels = None
depends_on = None


def upgrade():
    # Step 1: Create the users table (already fine)
    op.create_table('users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=80), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=True),
        sa.Column('password_hash', sa.String(length=512), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username')
    )

    # Step 2: Add the user_id column to journal_threads (nullable for now)
    with op.batch_alter_table('journal_threads', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))

    # Step 3: Insert dummy fallback user
    op.execute("""
        INSERT INTO users (id, username, email, password_hash)
        VALUES (1, 'testuser', 'test@example.com', 'dummyhash')
    """)

    # Step 4: Assign that user to all existing threads
    op.execute("""
        UPDATE journal_threads SET user_id = 1
    """)

    # Step 5: Enforce NOT NULL on user_id
    with op.batch_alter_table('journal_threads', schema=None) as batch_op:
        batch_op.alter_column('user_id', nullable=False)
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('journal_threads', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    op.drop_table('users')
    # ### end Alembic commands ###
